---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALAnyState:any_state.yml
---
metadata:
  title: |
    Small Claims Affidavit and Claim
  short title: |
    Small Claims - Claim
  tags:
    - Other
  authors:
    - Zani Doumbia
    - Rebecca Izzo
---
mandatory: True
comment: |
  Global interview metadata
variable name: interview_metadata["final__dc_84_affidavit_and_claim_sm"]
data:
  al_weaver_version: "1.10.0a2"
  generated on: "2023-04-09"
  title: >-
    Small Claims Affidavit and Claim
  short title: >-
    Small Claims - Claim
  description: |-
    This interview helps someone in Michigan start a case in Small Claims Court.
  allowed courts: []
  categories:
    - "Small Claims"
  typical role: "plaintiff"
  generate download screen: True
---
code: |
  interview_metadata['main_interview_key'] =  'final__dc_84_affidavit_and_claim_sm'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MI"
---
code: |
  github_repo_name =  'docassemble-FinalDc84AffidavitAndClaimSm'
---
code: |
  interview_short_title = "Start a case in Small Claims Court"
---
code: |
  al_form_type = "starts_case" 
---
objects:
  - users: ALPeopleList.using(ask_number=True,target_number=1)
---
sections:
  - review_final__dc_84_affidavit_and_claim_sm: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_final__dc_84_affidavit_and_claim_sm
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["final__dc_84_affidavit_and_claim_sm"]["allowed courts"]
  nav.set_section("review_final__dc_84_affidavit_and_claim_sm")
  user_role = "plaintiff"
  user_ask_role = "plaintiff"
  Do_you_have_a_claim_for_Small_Claims_Court
  Describe_the_reasons_for_the_claim
  Previously_Filed_Civil_Action
  set_progress(20)
  Provide_your_personal_information
  Provide_the_defendants_information
  Provide_the_following_details_about_the_claim
  set_progress(40)
  Miscellaneous_for_the_Court
  plaintiffs.gather()
  defendants.gather()
  set_progress(60)
  interview_order_final__dc_84_affidavit_and_claim_sm = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  final__dc_84_affidavit_and_claim_sm_intro
  interview_order_final__dc_84_affidavit_and_claim_sm
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  final__dc_84_affidavit_and_claim_sm_download
---
comment: |
  This question is used to introduce your interview. Please customize
id: Small_Claims_Affidavit_and_Claim
continue button field: final__dc_84_affidavit_and_claim_sm_intro
question: |
  Small Claims Affidavit and Claim
subquestion: |
  This interview will help you start a case in Small Claims Court.
  
  If you have an ongoing case related to this issue in another court, please gather the following information:
  
  1. Court of the ongoing case
  2. Case Number
  3. Judge Assigned to the Case
  
  Most people take about [5] minutes to finish this interview.
---
id: Do you have a claim for Small Claims Court
question: |
  Do you have a claim for Small Claims Court
subquestion: |
  What amount of damages are you asking for in the small claims suit?
fields:
  - "Amount of money claimed (amounts above $6,500 cannot be disputed in Small Claims Court):": amount_of_money_claimed
    datatype: currency
    min: 0
    max: 6500
continue button field: Do_you_have_a_claim_for_Small_Claims_Court
---
id: Describe the reasons for the claim
question: |
  Describe the reasons for the claim.
subquestion: |
  What, When, and Where?
fields:
  - "On what date did the issue occur?": date_claim_arose
    datatype: date
  - "Explain the reasons you are filing claim.": claim_reason_1
    maxlength: 67
  - "Claim reason 2": claim_reason_2
    maxlength: 178
  - "Claim reason 3": claim_reason_3
    maxlength: 178
  - "Claim reason 4": claim_reason_4
    input type: area
continue button field: Describe_the_reasons_for_the_claim
---
id: Previously Filed Civil Action
question: |
  Previously Filed Civil Action
subquestion: |
  Is there an existing case related to this issue?
fields:
  - "Have you previously filed an action in court related for this claim?": has_prev_action
    datatype: yesno
  - "Did you file the previous action in this court?": has_this_court
    datatype: yesno
  - "Did you file the previous action in another court?": other_court_name
    maxlength: 74
  - "If yes, please write the name of the court here.": has_other_court
    datatype: yesno
  - "What is the case number for the previous action?": prev_action_case_number
    maxlength: 44
  - "What is the name of the judge that was assigned to the previous action?":  prev_action_assigned_judge
    maxlength: 58
  - "Is the previous action ongoing?": has_prev_action_remains
    datatype: yesno
  - "Is the previousl action no longer pending?": has_prev_action_no_longer_pending
    datatype: yesno
continue button field: Previously_Filed_Civil_Action
---
id: Provide your personal information
question: |
  Provide your personal information.
subquestion: |
  Name, address, and telephone number.
fields:
  - "Enter the plaintiff's address": plaintiff_address
    maxlength: 86
  - "Enter the plaintiff's city, state, and zip code": plaintiff_city_state_zip
    maxlength: 64
  - "Enter the plaintiff's telephone number": plaintiff_telephone_no
    maxlength: 26
continue button field: Provide_your_personal_information
---
id: Provide the defendant s information
question: |
  Provide the defendant's information.
subquestion: |
  Name, address, and telephone number.
fields:
  - "Enter the defendant's address": defendant_address
    maxlength: 86
  - "Enter the defendant's city, state, and zip code": defendant_city_state_zip
    maxlength: 64
  - "Enter the defendant's telephone number": defendant_telephone_no
    maxlength: 26
continue button field: Provide_the_defendants_information
---
id: Provide the following details about the claim
question: |
  Provide the following details about the claim.
subquestion: |
  Describe the situations of plaintiff and the defendant.
fields:
  - "I am the plaintiff": has_i_am_the_plaintiff
    datatype: yesno
  - "I am the plaintiff's partner": has_i_am_partner
    datatype: yesno
  - "I am full time employee": has_i_am_full_time_employee
    datatype: yesno
  - "Other details about the plaintiff": plaintiff_other
    maxlength: 32
  - "Is the plaintif an individual": has_plaintif_individual
    datatype: yesno
  - "Is the plaintiff a partnership": has_plaintiff_partnership
    datatype: yesno
  - "Is the plaintiff a corporation": has_plaintiff_corporation
    datatype: yesno
  - "Is the plaintiff a sole proprietor": has_plaintiff_sole_proprietor
    datatype: yesno
  - "Other details about the plaintiff": has_plaintiff_other
    datatype: yesno
  - "Other details about the defendant other": defendant_other
    maxlength: 32
  - "Is the defendant an individual?": has_defendant_individual
    datatype: yesno
  - "Is the defendant a partnership?": has_defendant_partnership
    datatype: yesno
  - "Is the defendant a corporation?": has_defendant_corporation
    datatype: yesno
  - "Is the defendant a sole proprietor?": has_defendant_sole_proprietor
    datatype: yesno
  - "Other details about the defendant.": has_defendant_other
    datatype: yesno
  - "Select if you believe that the defendant is mentally competent.": has_mentally_competent
    datatype: yesno
  - "Select if you believe that the defendant is NOT mentally competent.": has_not_mentally_competent
    datatype: yesno
  - "Is the defendant 18 years or older?": has_18_years_old
    datatype: yesno
  - "Is the defendant a minor?": has_not_18_years_old
    datatype: yesno
  - "Select if you do not know whether the defendant has military service.": has_do_not_know_military_service
    datatype: yesno
  - "Select if you know the defendant does not have military service.": has_not_military_service
    datatype: yesno
  - "Select if you know the defendant has military service.": has_military_service
    datatype: yesno
continue button field: Provide_the_following_details_about_the_claim
---
id: Miscellaneous for the Court
question: |
  Miscellaneous for the Court
subquestion: |
  [Review for inclusion]
fields:
  - "Case Number": case_no
    maxlength: 58
  - "Judge": judge_no
    maxlength: 58
  - "Court Address": court_address
    maxlength: 156
  - "Court Telephone Number": court_telephone_no
    maxlength: 30
continue button field: Miscellaneous_for_the_Court
---
id: preview final__dc_84_affidavit_and_claim_sm
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_final__dc_84_affidavit_and_claim_sm'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: final__dc_84_affidavit_and_claim_sm_preview_question    
---
code: |
  signature_fields = ['plaintiffs[0].signature']
---
code: |
  state_of_michigan = DAEmpty()
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
id: final dc 84 affidavit and claim sm review screen
event: review_final__dc_84_affidavit_and_claim_sm
question: |
  Review your answers
review:
  - Edit: state_of_michigan
    button: |
      **State of Michigan**:
      ${ state_of_michigan }
  - Edit: case_no
    button: |
      **Case Number**:
      ${ case_no }
  - Edit: judge_no
    button: |
      **Judge**:
      ${ judge_no }
  - Edit: court_address
    button: |
      **Court Address**:
      ${ court_address }
  - Edit: court_telephone_no
    button: |
      **Court Telephone Number**:
      ${ court_telephone_no }
  - Edit: plaintiffs.revisit
    button: |
      **Plaintiffs**

      % for item in plaintiffs:
        * ${ item }
      % endfor
  - Edit: plaintiff_address
    button: |
      **Plaintiff's Address**:
      ${ plaintiff_address }
  - Edit: plaintiff_city_state_zip
    button: |
      **Plaintiff's City, State, and Zip Code**:
      ${ plaintiff_city_state_zip }
  - Edit: plaintiff_telephone_no
    button: |
      **Plaintiff's Telephone Number**:
      ${ plaintiff_telephone_no }
  - Edit: defendants.revisit
    button: |
      **Defendants**

      % for item in defendants:
        * ${ item }
      % endfor
  - Edit: defendant_address
    button: |
      **Defendant's Address**:
      ${ defendant_address }
  - Edit: defendant_city_state_zip
    button: |
      **Defendant's City, State, and Zip Code**:
      ${ defendant_city_state_zip }
  - Edit: defendant_telephone_no
    button: |
      **Defendant's Telephone Number**:
      ${ defendant_telephone_no }
  - Edit: has_prev_action
    button: |
      **Has Previously Filed Action**:
      ${ word(yesno(has_prev_action)) }
  - Edit: other_court_name
    button: |
      **Other Court Name**:
      ${ other_court_name }
  - Edit: has_this_court
    button: |
      **Has this court**:
      ${ word(yesno(has_this_court)) }
  - Edit: has_other_court
    button: |
      **Has Other Court**:
      ${ word(yesno(has_other_court)) }
  - Edit: prev_action_case_number
    button: |
      **Previously Filed Action Case Number**:
      ${ prev_action_case_number }
  - Edit: prev_action_assigned_judge
    button: |
      **Previously Filed Action Assigned Judge**:
      ${ prev_action_assigned_judge }
  - Edit: has_prev_action_remains
    button: |
      **Has Previously Filed Action Remains**:
      ${ word(yesno(has_prev_action_remains)) }
  - Edit: has_prev_action_no_longer_pending
    button: |
      **Has Previously Filed Action No Longer Pending**:
      ${ word(yesno(has_prev_action_no_longer_pending)) }
  - Edit: has_i_am_the_plaintiff
    button: |
      **Has I am the plaintiff**:
      ${ word(yesno(has_i_am_the_plaintiff)) }
  - Edit: has_i_am_partner
    button: |
      **Has I am partner**:
      ${ word(yesno(has_i_am_partner)) }
  - Edit: has_i_am_full_time_employee
    button: |
      **Has I am full time employee**:
      ${ word(yesno(has_i_am_full_time_employee)) }
  - Edit: plaintiff_other
    button: |
      **Plaintiff other**:
      ${ plaintiff_other }
  - Edit: has_plaintif_individual
    button: |
      **Has plaintif individual**:
      ${ word(yesno(has_plaintif_individual)) }
  - Edit: has_plaintiff_partnership
    button: |
      **Has plaintiff partnership**:
      ${ word(yesno(has_plaintiff_partnership)) }
  - Edit: has_plaintiff_corporation
    button: |
      **Has plaintiff corporation**:
      ${ word(yesno(has_plaintiff_corporation)) }
  - Edit: has_plaintiff_sole_proprietor
    button: |
      **Has plaintiff sole proprietor**:
      ${ word(yesno(has_plaintiff_sole_proprietor)) }
  - Edit: has_plaintiff_other
    button: |
      **Has plaintiff other**:
      ${ word(yesno(has_plaintiff_other)) }
  - Edit: defendant_other
    button: |
      **Defendant other**:
      ${ defendant_other }
  - Edit: has_defendant_individual
    button: |
      **Has defendant individual**:
      ${ word(yesno(has_defendant_individual)) }
  - Edit: has_defendant_partnership
    button: |
      **Has defendant partnership**:
      ${ word(yesno(has_defendant_partnership)) }
  - Edit: has_defendant_corporation
    button: |
      **Has defendant corporation**:
      ${ word(yesno(has_defendant_corporation)) }
  - Edit: has_defendant_sole_proprietor
    button: |
      **Has defendant sole proprietor**:
      ${ word(yesno(has_defendant_sole_proprietor)) }
  - Edit: has_defendant_other
    button: |
      **Has defendant other**:
      ${ word(yesno(has_defendant_other)) }
  - Edit: date_claim_arose
    button: |
      **Date claim arose**:
      ${ date_claim_arose }
  - Edit: amount_of_money_claimed
    button: |
      **Amount of money claimed**:
      ${ currency(amount_of_money_claimed) }
  - Edit: claim_reason_1
    button: |
      **Claim reason 1**:
      ${ claim_reason_1 }
  - Edit: claim_reason_2
    button: |
      **Claim reason 2**:
      ${ claim_reason_2 }
  - Edit: claim_reason_3
    button: |
      **Claim reason 3**:
      ${ claim_reason_3 }
  - Edit: claim_reason_4
    button: |
      **Claim reason 4**:
      > ${ single_paragraph(claim_reason_4) }
  - Edit: has_mentally_competent
    button: |
      **Has mentally competent**:
      ${ word(yesno(has_mentally_competent)) }
  - Edit: has_not_mentally_competent
    button: |
      **Has not mentally competent**:
      ${ word(yesno(has_not_mentally_competent)) }
  - Edit: has_18_years_old
    button: |
      **Has 18 years old**:
      ${ word(yesno(has_18_years_old)) }
  - Edit: has_not_18_years_old
    button: |
      **Has not 18 years old**:
      ${ word(yesno(has_not_18_years_old)) }
  - Edit: has_do_not_know_military_service
    button: |
      **Has do not know military service**:
      ${ word(yesno(has_do_not_know_military_service)) }
  - Edit: has_not_military_service
    button: |
      **Has Not Military Service**:
      ${ word(yesno(has_not_military_service)) }
  - Edit: has_military_service
    button: |
      **Has Military Service**:
      ${ word(yesno(has_military_service)) }
---
continue button field: plaintiffs.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ plaintiffs.table }

  ${ plaintiffs.add_action() }
---
table: plaintiffs.table
rows: plaintiffs
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - name.first
  - signature
confirm: True

---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
id: download final__dc_84_affidavit_and_claim_sm
event: final__dc_84_affidavit_and_claim_sm_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_final__dc_84_affidavit_and_claim_sm'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - final__dc_84_affidavit_and_claim_sm_Post_interview_instructions: ALDocument.using(title="Instructions", filename="final__dc_84_affidavit_and_claim_sm_next_steps.docx", enabled=True, has_addendum=False)
  - final__dc_84_affidavit_and_claim_sm_attachment: ALDocument.using(title="Small Claims Affidavit and Claim", filename="final__dc_84_affidavit_and_claim_sm", enabled=True, has_addendum=True, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[final__dc_84_affidavit_and_claim_sm_Post_interview_instructions, final__dc_84_affidavit_and_claim_sm_attachment], filename="final__dc_84_affidavit_and_claim_sm", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[final__dc_84_affidavit_and_claim_sm_attachment],  filename="final__dc_84_affidavit_and_claim_sm", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: final__dc_84_affidavit_and_claim_sm_next_steps
  docx template file: final__dc_84_affidavit_and_claim_sm_next_steps.docx
  variable name: final__dc_84_affidavit_and_claim_sm_Post_interview_instructions[i]
  skip undefined: True
---
attachment:
  name: final  dc 84 affidavit and claim sm
  filename: final__dc_84_affidavit_and_claim_sm
  variable name: final__dc_84_affidavit_and_claim_sm_attachment[i]
  skip undefined: True
  pdf template file: final__dc_84_affidavit_and_claim_sm.pdf
  fields:
      - "state_of_michigan": ${ state_of_michigan }
      - "case_no": ${ case_no }
      - "judge_no": ${ judge_no }
      - "court_address": ${ court_address }
      - "court_telephone_no": ${ court_telephone_no }
      - "plaintiff_name": ${ plaintiffs[0] }
      - "plaintiff_address": ${ plaintiff_address }
      - "plaintiff_city_state_zip": ${ plaintiff_city_state_zip }
      - "plaintiff_telephone_no": ${ plaintiff_telephone_no }
      - "defendant_name": ${ defendants[0] }
      - "defendant_address": ${ defendant_address }
      - "defendant_city_state_zip": ${ defendant_city_state_zip }
      - "defendant_telephone_no": ${ defendant_telephone_no }
      - "has_prev_action": ${ has_prev_action }
      - "other_court_name": ${ other_court_name }
      - "has_this_court": ${ has_this_court }
      - "has_other_court": ${ has_other_court }
      - "prev_action_case_number": ${ prev_action_case_number }
      - "prev_action_assigned_judge": ${ prev_action_assigned_judge }
      - "has_prev_action_remains": ${ has_prev_action_remains }
      - "has_prev_action_no_longer_pending": ${ has_prev_action_no_longer_pending }
      - "has_i_am_the_plaintiff": ${ has_i_am_the_plaintiff }
      - "has_i_am_partner": ${ has_i_am_partner }
      - "has_i_am_full_time_employee": ${ has_i_am_full_time_employee }
      - "plaintiff_other": ${ plaintiff_other }
      - "has_plaintif_individual": ${ has_plaintif_individual }
      - "has_plaintiff_partnership": ${ has_plaintiff_partnership }
      - "has_plaintiff_corporation": ${ has_plaintiff_corporation }
      - "has_plaintiff_sole_proprietor": ${ has_plaintiff_sole_proprietor }
      - "has_plaintiff_other": ${ has_plaintiff_other }
      - "defendant_other": ${ defendant_other }
      - "has_defendant_individual": ${ has_defendant_individual }
      - "has_defendant_partnership": ${ has_defendant_partnership }
      - "has_defendant_corporation": ${ has_defendant_corporation }
      - "has_defendant_sole_proprietor": ${ has_defendant_sole_proprietor }
      - "has_defendant_other": ${ has_defendant_other }
      - "date_claim_arose": ${ date_claim_arose.format() }
      - "amount_of_money_claimed": ${ currency(amount_of_money_claimed) }
      - "claim_reason_1": ${ claim_reason_1 }
      - "claim_reason_2": ${ claim_reason_2 }
      - "claim_reason_3": ${ claim_reason_3 }
      - "claim_reason_4": ${ final__dc_84_affidavit_and_claim_sm_attachment.safe_value("claim_reason_4") }
      - "has_mentally_competent": ${ has_mentally_competent }
      - "has_not_mentally_competent": ${ has_not_mentally_competent }
      - "has_18_years_old": ${ has_18_years_old }
      - "has_not_18_years_old": ${ has_not_18_years_old }
      - "has_do_not_know_military_service": ${ has_do_not_know_military_service }
      - "has_not_military_service": ${ has_not_military_service }
      - "has_military_service": ${ has_military_service }
      - "plaintiff_signature": ${ plaintiffs[0].signature }
---
code: |
  final__dc_84_affidavit_and_claim_sm_attachment.overflow_fields["claim_reason_4"].overflow_trigger = 178
  final__dc_84_affidavit_and_claim_sm_attachment.overflow_fields["claim_reason_4"].label = "Claim reason 4"
  final__dc_84_affidavit_and_claim_sm_attachment.overflow_fields.gathered = True



